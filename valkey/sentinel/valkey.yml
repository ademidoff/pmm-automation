---
- name: Deploy Valkey Cluster with Sentinel
  hosts: localhost
  gather_facts: false
  vars:
    # Configurable variables
    valkey_image: "valkey/valkey:7-alpine"
    valkey_network_name: "www"
    valkey_password: ""
    valkey_data_dir: "{{ lookup('env', 'HOME') }}/valkey/data"
    valkey_config_dir: "{{ lookup('env', 'HOME') }}/valkey/config"
    valkey_primary_port: 6379
    valkey_replica_count: 2
    valkey_replica_start_port: 6380
    sentinel_count: 3
    sentinel_start_port: 26379
    sentinel_quorum: 2

    pmm_server_name: "pmm-server"

  tasks:
    - name: Create Docker network
      community.docker.docker_network:
        name: "{{ valkey_network_name }}"
        driver: bridge
        state: present

    - name: Create config directory
      file:
        path: "{{ valkey_config_dir }}"
        state: directory
        mode: '0755'

    - name: Create config directories for each Sentinel
      file:
        path: "{{ valkey_config_dir }}/sentinel-{{ item }}"
        state: directory
        mode: '0755'
      loop: "{{ range(1, sentinel_count + 1) | list }}"

    - name: Create data directory
      file:
        path: "{{ valkey_data_dir }}"
        state: directory
        mode: '0755'

    - name: Generate Valkey primary configuration
      template:
        src: valkey-primary.conf.j2
        dest: "{{ valkey_config_dir }}/valkey-primary.conf"
        mode: '0644'

    - name: Generate Valkey replica configurations
      template:
        src: valkey-replica.conf.j2
        dest: "{{ valkey_config_dir }}/valkey-replica-{{ item }}.conf"
        mode: '0644'
      loop: "{{ range(1, valkey_replica_count + 1) | list }}"

    - name: Generate Sentinel configurations
      template:
        src: sentinel.conf.j2
        dest: "{{ valkey_config_dir }}/sentinel-{{ item }}/sentinel.conf"
        mode: '0664'
      loop: "{{ range(1, sentinel_count + 1) | list }}"

    - name: Generate a password if not provided
      when: valkey_password == ""
      set_fact:
        valkey_password: "{{ lookup('community.general.random_string', length=20, min_special=5, min_upper=2, override_special='!?()[]{}:;/|@#$%&^*<>=_+-') }}"

    - name: Display generated Valkey password
      debug:
        msg: "Generated Valkey password: {{ valkey_password }}"

    - name: Create Docker volume for primary data
      community.docker.docker_volume:
        name: "valkey-primary-data"
        state: present

    - name: Create Docker volumes for replica data
      community.docker.docker_volume:
        name: "valkey-replica-{{ item }}-data"
        state: present
      loop: "{{ range(1, valkey_replica_count + 1) | list }}"

    - name: Start Valkey primary container
      community.docker.docker_container:
        name: "valkey-primary"
        image: "{{ valkey_image }}"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ valkey_network_name }}"
        ports:
          - "{{ valkey_primary_port }}:6379"
        volumes:
          - "valkey-primary-data:/data"
          - "{{ valkey_config_dir }}/valkey-primary.conf:/usr/local/etc/valkey/valkey.conf:ro"
        command: ["valkey-server", "/usr/local/etc/valkey/valkey.conf"]
        healthcheck:
          test: ["CMD", "valkey-cli", "-a", "{{ valkey_password }}", "ping"]
          interval: 10s
          timeout: 5s
          retries: 5

    - name: Wait for the primary to be ready
      wait_for:
        host: localhost
        port: "{{ valkey_primary_port }}"
        timeout: 30
        delay: 1

    - name: Start Valkey replica containers
      community.docker.docker_container:
        name: "valkey-replica-{{ item }}"
        image: "{{ valkey_image }}"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ valkey_network_name }}"
        ports:
          - "{{ valkey_replica_start_port + item - 1 }}:6379"
        volumes:
          - "valkey-replica-{{ item }}-data:/data"
          - "{{ valkey_config_dir }}/valkey-replica-{{ item }}.conf:/usr/local/etc/valkey/valkey.conf:ro"
        command: ["valkey-server", "/usr/local/etc/valkey/valkey.conf"]
        healthcheck:
          test: ["CMD", "valkey-cli", "-a", "{{ valkey_password }}", "ping"]
          interval: 10s
          timeout: 5s
          retries: 5
      loop: "{{ range(1, valkey_replica_count + 1) | list }}"

    - name: Wait for replicas to be ready
      wait_for:
        host: localhost
        port: "{{ valkey_replica_start_port + item - 1 }}"
        timeout: 30
        delay: 1
      loop: "{{ range(1, valkey_replica_count + 1) | list }}"

    - name: Start Sentinel containers
      community.docker.docker_container:
        name: "sentinel-{{ item }}"
        image: "{{ valkey_image }}"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ valkey_network_name }}"
        ports:
          - "{{ sentinel_start_port + item - 1 }}:26379"
        volumes:
          - "{{ valkey_config_dir }}/sentinel-{{ item }}:/usr/local/etc/valkey"
        command: ["valkey-sentinel", "/usr/local/etc/valkey/sentinel.conf"]
        healthcheck:
          test: ["CMD", "valkey-cli", "-p", "{{ sentinel_start_port }}", "ping"]
          interval: 10s
          timeout: 5s
          retries: 5
      loop: "{{ range(1, sentinel_count + 1) | list }}"

    - name: Wait for Sentinels to be ready
      wait_for:
        host: localhost
        port: "{{ sentinel_start_port + item - 1 }}"
        timeout: 30
        delay: 1
      loop: "{{ range(1, sentinel_count + 1) | list }}"

    - name: Verify cluster status
      community.docker.docker_container_exec:
        container: "valkey-primary"
        command: valkey-cli -a "{{ valkey_password }}" info replication
      register: cluster_status

    - name: Display cluster status
      debug:
        msg: "{{ cluster_status.stdout_lines }}"

    - name: Run Sentinel status command
      community.docker.docker_container_exec:
        container: "sentinel-1"
        command: valkey-cli -p {{ sentinel_start_port }} sentinel masters
      register: sentinel_status

    - name: Display Sentinel status
      debug:
        msg: "{{ sentinel_status.stdout_lines }}"

    - name: Add the primary to monitoring
      community.docker.docker_container_exec:
        container: "{{ pmm_server_name }}"
        command: pmm-admin add valkey --cluster=valkey-cluster --replication-set=valkey-repl --environment=valkey-test --username=default --password="{{ valkey_password }}" --service-name=valkey-primary-svc --host=valkey-primary --port=6379 --custom-labels='role=primary'
      ignore_errors: yes

    - name: Add the replicas to monitoring
      community.docker.docker_container_exec:
        container: "{{ pmm_server_name }}"
        command: pmm-admin add valkey --cluster=valkey-cluster --replication-set=valkey-repl --environment=valkey-test --username=default --password="{{ valkey_password }}" --service-name=valkey-replica{{ item }}-svc --host=valkey-replica-{{ item }} --port=6379 --custom-labels='role=replica'
      loop: "{{ range(1, valkey_replica_count + 1) | list }}"
      ignore_errors: yes

    - name: Add Sentinels to monitoring
      community.docker.docker_container_exec:
        container: "{{ pmm_server_name }}"
        command: pmm-admin add valkey --cluster=valkey-cluster --environment=valkey-test --username=default --password="{{ valkey_password }}" --service-name=sentinel{{ item }}-svc --host=sentinel-{{ item }} --port={{ sentinel_start_port }} --custom-labels='role=sentinel'
      loop: "{{ range(1, sentinel_count + 1) | list }}"
      ignore_errors: yes
